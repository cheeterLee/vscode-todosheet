{
  "version": 3,
  "file": "sidebar.css",
  "sources": [
    "Todos.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import { onMount } from \"svelte\";\nexport let user;\nexport let accessToken;\nlet text = \"\";\nlet todos = [];\nasync function addTodo(t) {\n    const response = await fetch(`${apiBaseUrl}/todo`, {\n        method: \"POST\",\n        body: JSON.stringify({\n            text: t,\n        }),\n        headers: {\n            \"content-type\": \"application/json\",\n            authorization: `Bearer ${accessToken}`,\n        },\n    });\n    const { todo } = await response.json();\n    todos = [todo, ...todos];\n}\nonMount(async () => {\n    window.addEventListener(\"message\", async (event) => {\n        const message = event.data;\n        switch (message.type) {\n            case \"new-todo\":\n                addTodo(message.value);\n                break;\n        }\n    });\n    const response = await fetch(`${apiBaseUrl}/todo`, {\n        headers: {\n            authorization: `Bearer ${accessToken}`,\n        },\n    });\n    const payload = await response.json();\n    todos = payload.todos;\n});\n</script>\n\n<div>Hello ðŸ˜‡, {user.name}</div>\n\n<form\n\ton:submit|preventDefault={async () => {\n\t\taddTodo(text)\n\t\ttext = \"\"\n\t}}\n>\n\t<input bind:value={text} />\n</form>\n\n<ul>\n\t{#each todos as todo (todo.id)}\n\t\t<li>\n\t\t\t<button\n\t\t\t\tclass=\"btn-list {todo.completed ? 'completed' : ''}\"\n\t\t\t\ton:click={async () => {\n\t\t\t\t\ttodo.completed = !todo.completed\n\t\t\t\t\tconst response = await fetch(`${apiBaseUrl}/todo`, {\n\t\t\t\t\t\tmethod: \"PUT\",\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tid: todo.id,\n\t\t\t\t\t\t\t// completed: todo.completed,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"content-type\": \"application/json\",\n\t\t\t\t\t\t\tauthorization: `Bearer ${accessToken}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n                    console.log(await response.json());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{todo.text}\n\t\t\t</button>\n\t\t</li>\n\t{/each}\n</ul>\n\n<style>\n\t.btn-list {\n\t\tbackground: none;\n\t\toutline: none;\n\t}\n\n\t.completed {\n\t\ttext-decoration: line-through;\n\t}\n</style>\n"
  ],
  "names": [],
  "mappings": "AA6EC,wBAAU,CACT,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IACV,CAEA,yBAAW,CACV,eAAe,CAAE,YAClB"
}