{
  "version": 3,
  "file": "sidebar.css",
  "sources": [
    "Sidebar.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import { onMount } from \"svelte\";\nlet accessToken = \"\";\nlet todos = [];\nlet text = \"\";\nlet loading = true;\nlet user = null;\nonMount(async () => {\n    window.addEventListener(\"message\", async (event) => {\n        const message = event.data;\n        switch (message.type) {\n            case \"new-todo\":\n                todos = [\n                    { text: message.value, completed: false },\n                    ...todos,\n                ];\n                break;\n            case \"token\":\n                accessToken = message.value;\n                const response = await fetch(`${apiBaseUrl}/me`, {\n                    headers: {\n                        authorization: `Bearer ${accessToken}`,\n                    },\n                });\n                const data = await response.json();\n                user = data.user;\n                loading = false;\n        }\n    });\n    tsvscode.postMessage({ type: \"get-token\", value: undefined });\n});\n</script>\n\n{#if loading}\n\t<div>Loading... :)</div>\n{:else if user}\n\t<pre>{JSON.stringify(user, null, 2)}</pre>\n{:else}\n\t<div>No user is logged in :(</div>\n{/if}\n\n<form\n\ton:submit|preventDefault={() => {\n\t\ttodos = [{ text, completed: false }, ...todos]\n\t\ttext = \"\"\n\t}}\n>\n\t<input bind:value={text} />\n</form>\n\n<ul>\n\t{#each todos as todo (todo.text)}\n\t\t<li>\n\t\t\t<button\n\t\t\t\tclass=\"btn-list {todo.completed ? 'completed' : ''}\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\ttodo.completed = !todo.completed\n\t\t\t\t\tconsole.log(\"completed: \" + todo.completed)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{todo.text}\n\t\t\t</button>\n\t\t</li>\n\t{/each}\n</ul>\n\n<button\n\ton:click={() => {\n\t\ttsvscode.postMessage({\n\t\t\ttype: \"onInfo\",\n\t\t\tvalue: \"info message\",\n\t\t})\n\t}}>Click me</button\n>\n\n<button\n\ton:click={() => {\n\t\ttsvscode.postMessage({\n\t\t\ttype: \"onError\",\n\t\t\tvalue: \"error message\",\n\t\t})\n\t}}>Click me</button\n>\n\n<style>\n\t.btn-list {\n\t\tbackground: none;\n\t\toutline: none;\n\t}\n\n\t.completed {\n\t\ttext-decoration: line-through;\n\t}\n</style>\n"
  ],
  "names": [],
  "mappings": "AAoFC,wBAAU,CACT,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IACV,CAEA,yBAAW,CACV,eAAe,CAAE,YAClB"
}